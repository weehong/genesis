server:
  port: 8081

spring:
  application:
    name: GENESIS

  datasource:
    url: jdbc:postgresql://${POSTGRES_DB_HOST}:${POSTGRES_DB_PORT}/${POSTGRES_DB_NAME}
    username: ${POSTGRES_DB_USER}
    password: ${POSTGRES_DB_PASS}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_POOL_MIN_IDLE:2}
      idle-timeout: ${DB_IDLE_TIMEOUT:300000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}

    jpa:
      hibernate:
        ddl-auto: validate
      show-sql: true

    flyway:
      enabled: true
      baseline-on-migrate: true
      validate-on-migrate: true
      locations: classpath:db/migrations

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
    allowed-methods: ${CORS_ALLOWED_METHODS}
    allowed-headers: ${CORS_ALLOWED_HEADERS}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS}
    max-age: ${CORS_MAX_AGE}

aws:
  cognito:
    region: ${AWS_REGION}
    user-pool-id: ${AWS_COGNITO_USER_POOL_ID}
    client-id: ${AWS_COGNITO_CLIENT_ID}
    client-secret: ${AWS_COGNITO_CLIENT_SECRET}

feign:
  engine:
    url: ${FEIGN_ENGINE_URL}

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    root: INFO
    com.resetrix.genesis: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{requestId}] [%X{userId}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} [%X{requestId}] [%X{userId}] - %msg%n"
